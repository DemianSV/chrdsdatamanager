// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/data/get": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Get operational monitoring data from the database",
                "parameters": [
                    {
                        "description": "Input structure",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.RequestRawDataGetT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ResponseRawDataGetArrayT"
                        }
                    },
                    "204": {
                        "description": "NoContent"
                    },
                    "403": {
                        "description": "Forbidden, The monitoring module key is incorrect, or not registered"
                    },
                    "500": {
                        "description": "Internal server error, The internal error of the service"
                    }
                }
            }
        },
        "/data/save": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Save monitoring data in the database",
                "parameters": [
                    {
                        "description": "Input structure",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.RequestRawDataSaveArrayT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK, The status of 200 is always returned, the data is successfully preserved if in the return structure status = 1",
                        "schema": {
                            "$ref": "#/definitions/main.ResponseRawDataSaveArrayT"
                        }
                    },
                    "403": {
                        "description": "Forbidden, The monitoring module key is incorrect, or not registered"
                    },
                    "500": {
                        "description": "Internal server error, The internal error of the service"
                    }
                }
            }
        },
        "/task/get": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Get a list of all your task to fulfill",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ResponseTaskGetArrayT"
                        }
                    },
                    "204": {
                        "description": "NoContent"
                    },
                    "403": {
                        "description": "Forbidden, The monitoring module key is incorrect, or not registered"
                    },
                    "500": {
                        "description": "Internal server error, The internal error of the service"
                    }
                }
            }
        },
        "/text/get": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Get text data from the database",
                "parameters": [
                    {
                        "description": "Input structure",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.RequestRawDataGetT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ResponseRawTextGetArrayT"
                        }
                    },
                    "204": {
                        "description": "NoContent"
                    },
                    "403": {
                        "description": "Forbidden, The monitoring module key is incorrect, or not registered"
                    },
                    "500": {
                        "description": "Internal server error, The internal error of the service"
                    }
                }
            }
        },
        "/text/save": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Save text monitoring data in the database",
                "parameters": [
                    {
                        "description": "Input structure",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.RequestRawTextSaveArrayT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK, The status of 200 is always returned, the data is successfully preserved if in the return structure status = 1",
                        "schema": {
                            "$ref": "#/definitions/main.ResponseRawDataSaveArrayT"
                        }
                    },
                    "403": {
                        "description": "Forbidden, The monitoring module key is incorrect, or not registered"
                    },
                    "500": {
                        "description": "Internal server error, The internal error of the service"
                    }
                }
            }
        },
        "/version": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Version"
                ],
                "summary": "Get the version of the DataManager module",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ResponseVersionT"
                        }
                    },
                    "403": {
                        "description": "Forbidden, The monitoring module key is incorrect, or not registered"
                    },
                    "500": {
                        "description": "Internal server error, The internal error of the service"
                    }
                }
            }
        }
    },
    "definitions": {
        "main.RequestRawDataGetT": {
            "type": "object",
            "properties": {
                "metric": {
                    "type": "string"
                },
                "spaceid": {
                    "type": "string"
                }
            }
        },
        "main.RequestRawDataSaveArrayT": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.RequestRawDataSaveT"
                    }
                }
            }
        },
        "main.RequestRawDataSaveT": {
            "type": "object",
            "properties": {
                "eventtime": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "spaceid": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "main.RequestRawTextSaveArrayT": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.RequestRawTextSaveT"
                    }
                }
            }
        },
        "main.RequestRawTextSaveT": {
            "type": "object",
            "properties": {
                "eventtime": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "spaceid": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "main.ResponseRawDataGetArrayT": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.ResponseRawDataGetT"
                    }
                }
            }
        },
        "main.ResponseRawDataGetT": {
            "type": "object",
            "properties": {
                "createtime": {
                    "type": "integer"
                },
                "eventtime": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "spaceid": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "main.ResponseRawDataSaveArrayT": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.ResponseRawDataSaveT"
                    }
                }
            }
        },
        "main.ResponseRawDataSaveT": {
            "type": "object",
            "properties": {
                "metric": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "spaceid": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "main.ResponseRawTextGetArrayT": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.ResponseRawTextGetT"
                    }
                }
            }
        },
        "main.ResponseRawTextGetT": {
            "type": "object",
            "properties": {
                "createtime": {
                    "type": "integer"
                },
                "eventtime": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "spaceid": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "main.ResponseTaskGetArrayT": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.ResponseTaskGetT"
                    }
                }
            }
        },
        "main.ResponseTaskGetT": {
            "type": "object",
            "properties": {
                "critical": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "spaceid": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "warning": {
                    "type": "string"
                }
            }
        },
        "main.ResponseVersionT": {
            "type": "object",
            "properties": {
                "apiversion": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
